	<div class="card" onload="initialize()" onunload="GUnload()">
	  <div class="card-block">
	    <div id="map" style="height:500px"></div>
	  </div>
	</div>


	<%= form_for @location do |f| %>
	  <fieldset class="form-group">
	    <%= f.label :address, 'Address' %>
	    <%= f.text_field :address, class: "form-control" %>
	  

		<div class="col-sm-4">
      <a href="#" id="find-from-address" class="btn btn-info btn-sm">Find from address</a>
    </div>

    </fieldset>

		<div class="form-group row">
		  <div class="col-sm-1">
		    <%= f.label :latitude %>
		  </div>

		  <div class="col-sm-3">
		    <%= f.text_field :latitude, class: "form-control" %>
		  </div>

		  <div class="col-sm-1">
		    <%= f.label :longitude %>
		  </div>

		  <div class="col-sm-3">
		    <%= f.text_field :longitude, class: "form-control" %>
		  </div>
		

			<div class="col-sm-4">
	      <a href="#" id="find-on-map" class="btn btn-info btn-sm">Find from coordinates</a>
	    </div>

		  <%= f.submit 'Add!', class: 'btn btn-primary' %>

		  <div class="bootstrap-iso">
		   <div class="container-fluid">
		    <div class="row">
		     <div class="col-md-6 col-sm-6 col-xs-12">
		      <form action="https://formden.com/post/MlKtmY4x/" class="form-horizontal" method="post">
		       <div class="form-group ">
		        <label class="control-label col-sm-2 requiredField" for="date">
		         Date
		         <span class="asteriskField">
		          *
		         </span>
		        </label>
		        <div class="col-sm-10">
		         <div class="input-group">
		          <div class="input-group-addon">
		           <i class="fa fa-calendar">
		           </i>
		          </div>
		          <input class="form-control" id="date" name="date" placeholder="MM/DD/YYYY" type="text"/>
		         </div>
		        </div>
		       </div>
		       <div class="form-group">
		        <div class="col-sm-10 col-sm-offset-2">
		         <input name="_honey" style="display:none" type="text"/>
		         <button class="btn btn-primary " name="submit" type="submit">
		          Submit
		         </button>
		        </div>
		       </div>
		      </form>
		     </div>
		    </div>
		   </div>
		  </div>

	  </div>
	<% end %>


	




	<script>
	var address_field, lat_field, lng_field, markersArray, placeMarkerAndPanTo, updateFields;

	markersArray = [];

	lat_field = $('#location_latitude');

	lng_field = $('#location_longitude');

	address_field = $('#location_address');

	window.initMap = function() {
	  var codeAddress, gcoder, map;
	  if ($('#map').size() > 0) {
	    map = new google.maps.Map(document.getElementById('map'), {
	      center: {
	        lat: 3.1390,
	        lng: 101.6869
	      },
	      zoom: 17
	    });
	    gcoder = new google.maps.Geocoder;
	    map.addListener('click', function(e) {
	      placeMarkerAndPanTo(e.latLng, map);
	      return updateFields(e.latLng);
	    });
	    $('#find-on-map').click(function(e) {
	      e.preventDefault();
	      return placeMarkerAndPanTo({
	        lat: parseInt(lat_field.val(), 10),
	        lng: parseInt(lng_field.val(), 10)
	      }, map);
	    });
	    $('#find-from-address').click(function(e) {
	      e.preventDefault();
	      return codeAddress();
	    });
	    return codeAddress = function() {
	      var address;
	      address = $('#location_address').val();
	      gcoder.geocode({
	        'address': address
	      }, function(results, status) {
	        var marker;
	        if (status === 'OK') {
	          while (markersArray.length) {
	            markersArray.pop().setMap(null);
	          }
	          marker = new google.maps.Marker({
	            position: results[0].geometry.location,
	            map: map
	          });
	          map.panTo(results[0].geometry.location);
	          markersArray.push(marker);
	          lat_field.val(null);
	          lng_field.val(null);
	        } else {
	          alert('Geocode was not successful for the following reason: ' + status);
	        }
	      });
	    };
	  }
	};

	placeMarkerAndPanTo = function(latLng, map) {
	  var marker;
	  while (markersArray.length) {
	    markersArray.pop().setMap(null);
	  }
	  marker = new google.maps.Marker({
	    position: latLng,
	    map: map
	  });
	  map.panTo(latLng);
	  return markersArray.push(marker);
	};

	updateFields = function(latLng) {
	  lat_field.val(latLng.lat());
	  lng_field.val(latLng.lng());
	  return address_field.val(null);
	};
</script>


<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["MAP_KEY"] %>&callback=initMap"
  type="text/javascript"></script>
